=> Image Upload Issues:
        - Where do images get physically stored? E.g mongoDB, HDD attached to server, External data store.
        - How do images get to the place they should be stored?
        - How do we relate images to a particular blog post?

* In this project, we will store our images in an external data storage e.g Amazon S3, Azure File Storage, Goole cloud storage. Here, we use Amazon S3.

=> We want to first setup some rules to govern users' ability to upload images;
    - Only signed-in users should be able to upload. Restrict at API level not at react level for security
    - The uploaded image should be tied to the blog post being created.
    - Only allow image files(e.g .jpg, .png, etc) to be uploaded.

* The upload process is like a two-hop approach. From the browser, we upload the image to our Express API(file is streamed into a temporary storage) then Express API uploads the image to Amazon S3(external storage).
-> This approach is however not scalable coz it will cause our server(Express API) to do more work thus increasing our expenditure on more servers. 

-> As an alternative to above problem, we use a below flow that will allow us to upload images directly from our browser to Amazon S3;

CLIENT                                   SERVER(EXPRESS API)                     AWS(AMAZON) S3

Client tells Server it needs to upload---> Server asks S3 for a presigned-------->      
a file to S3. It includes file name and     URL
file type.

                                     <----Server sends URL to react client  <------ S3 gives Server  
                                                                                     a presigned URL(Works ONLY fo a file matching the original file name).
React client uploads image file directly to S3 Server------------------------------>

React client tells Server the upload------>
was successful. Server saves URL of
that new image with the blog post.